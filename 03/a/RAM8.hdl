// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=dmipa, b=dmipb, c=dmipc, d=dmipd, e=dmipe, f=dmipf, g=dmipg, h=dmiph);

    Register(in=in, load=dmipa, out=ripa);
    Register(in=in, load=dmipb, out=ripb);
    Register(in=in, load=dmipc, out=ripc);
    Register(in=in, load=dmipd, out=ripd);
    Register(in=in, load=dmipe, out=ripe);
    Register(in=in, load=dmipf, out=ripf);
    Register(in=in, load=dmipg, out=ripg);
    Register(in=in, load=dmiph, out=riph);

    Mux8Way16(a=ripa, b=ripb, c=ripc, d=ripd, e=ripe, f=ripf, g=ripg, h=riph, sel=address, out=out);
}